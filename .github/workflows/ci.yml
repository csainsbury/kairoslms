name: KairosLMS CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kairoslms_test
        ports:
          - 5432:5432
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        flake8 src/ tests/
    
    - name: Type check with mypy
      run: |
        mypy src/
    
    - name: Run unit tests
      run: |
        pytest tests/ --junitxml=test-results.xml --cov=src/ --cov-report=xml
      env:
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: kairoslms_test
        DB_HOST: localhost
        DB_PORT: 5432
        SECRET_KEY: test_secret_key
    
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results.xml
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml
  
  docker-build:
    runs-on: ubuntu-22.04
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: config/Dockerfile
        push: false
        tags: kairoslms:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image
      run: |
        docker run --rm kairoslms:latest python -c "import sys; print(sys.version)"
    
  deployment-test:
    runs-on: ubuntu-22.04
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Docker Compose
      run: |
        docker-compose --version
    
    - name: Create .env file for testing
      run: |
        cat > config/.env << EOF
        # Database Settings
        DB_USER=postgres
        DB_PASSWORD=postgres
        DB_NAME=kairoslms
        DB_HOST=db
        DB_PORT=5432
        
        # API Settings
        SECRET_KEY=test_deployment_key
        
        # Backup Settings
        ENABLE_BACKUPS=false
        EOF
    
    - name: Start containers
      run: |
        docker-compose -f config/docker-compose.yml up -d
        sleep 15  # Wait for containers to start
    
    - name: Test API health check
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health)
        if [ "$response" != "200" ]; then
          echo "API health check failed with status $response"
          exit 1
        fi
        echo "API health check passed"
    
    - name: Stop containers
      run: |
        docker-compose -f config/docker-compose.yml down
